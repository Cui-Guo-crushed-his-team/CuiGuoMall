syntax = "proto3";

package payment;

option go_package = "github.com/Cui-Guo-crushed-his-team/CuiGuoMall/rpc/kitex_gen/payment";

enum Status{
  Unknown=0;
  Init=1;
  Success=2;
  Failed=3;
  Refund=4;
}
service PaymentService {

  // Prepay 预支付，对应于创建订单的步骤
  rpc  Prepay(PrepayReq) returns (PrepayResp){}
  // Repay 重新支付，用于没没支付成功再次调用支付
  rpc  Repay(RepayReq) returns (RepayResp){}

  rpc  Finish(FinishReq) returns (FinishResp){}
  // GetByOutTradeNo 根据外部订单号查询订单
  rpc  GetByOutTradeNo(GetByOutTradeNoReq) returns (GetByOutTradeNoResp){}

}


message PrepayReq {
  string amount = 1 ; //金额 单位为元，精确到小数点后两位，取值范围[0.01,100000000]
  string subject=3; //订单标题
}

message PrepayResp {
  string pay_url=1; //支付链接
  string out_trade_no = 2; // 唯一订单号商户订单号，64个字符以内、可包含字母、数字、下划线
}

message RepayReq {

  string amount = 1 ; //金额 单位为元，精确到小数点后两位，取值范围[0.01,100000000]
  string out_trade_no = 2; // 唯一订单号商户订单号，64个字符以内、可包含字母、数字、下划线
  string subject=3; //订单标题
}

message RepayResp {
  string pay_url=1; //支付链接

}

message FinishReq{
  string out_trade_no = 1; // 唯一订单号商户订单号
  string trade_no = 2; // 唯一订单号商户订单号
}

message FinishResp{}


message GetByOutTradeNoReq{
  string out_trade_no = 1; // 唯一订单号商户订单号
}

message GetByOutTradeNoResp{
  string description = 1;
  string out_trade_no = 2;
  string trade_no = 3;
  Status status = 4;
  string amount = 5;
}

